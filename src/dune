
(rule
 (targets libbatsmt_stubs%{ext_lib}) ;libbatsmt_c.so)
 (deps ./lib.rs ./ctx.rs ./solver.rs
       ../Cargo.toml ../Cargo.lock ../Makefile ../cargo-config
       (source_tree ../vendor))
 ;(mode fallback)
 (action
   (progn
    (chdir ..
      (run make CAML_LIB=%{ocaml-config:standard_library} build-rust-stubs)) ; build
    ;(run strip ../target/release/libbatsmt_stubs%{ext_lib} .)
    (run cp ../target/release/libbatsmt_stubs%{ext_lib} .)
    ;(system "[ -f ../target/release/libbatsmt_stubs.so ] && cp ../target/release/libbatsmt_stubs.so dllbatsmt_stubs%{ext_dll} || cp ../target/release/libbatsmt_stubs.dylib dllbatsmt_stubs%{ext_dll}")
    )))

(library
  (name batsmt)
  (public_name batsmt)
  (libraries threads)
  (wrapped false)
  (modules batsmt)
  (flags :standard -warn-error -3-32-50 -safe-string -w @8)
  (c_library_flags :standard -ldl -lpthread) ; -lbatsmt_c) ; -static)
  ;(modes native)
  (self_build_stubs_archive (batsmt)) ; custom!
  ;(c_names batsmt_stubs)
  (c_flags -fPIC -std=c99)
  (no_dynlink)
  )
